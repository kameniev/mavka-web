{"ast":null,"code":"import axios from \"axios\";\nimport firebase from \"../global\";\n\nclass Question {\n  constructor(json) {\n    this.type = json[\"Формат\"];\n    this.year = json[\"Рік\"];\n    this.number = json[\"Номер\"];\n    this.session = json[\"Cecія\"];\n    this.subject = json[\"Предмет\"];\n    this.topic = json[\"Тема\"];\n    this.question = json[\"Питання\"];\n    this.answer = json[\"Правильна відповідь\"];\n    this.comment = json[\"Коментар\"];\n    var tmpArr = [\"Відповідь А\", \"Відповідь Б\", \"Відповідь В\", \"Відповідь Г\", \"Відповідь Д\", \"Відповідь Е\", \"Відповідь A\", \"Відповідь B\", \"Відповідь C\", \"Відповідь D\", \"Відповідь E\", \"Відповідь G\", \"Відповідь F\", \"Відповідь H\"];\n    var currArr = [];\n\n    for (let i = 0; i < tmpArr.length; i++) {\n      if (json[tmpArr[i]] != null) {\n        currArr.push(json[tmpArr[i]]);\n      }\n\n      tmpArr[i] = tmpArr[i].replace(\"Відповідь\", \"Пояснення\");\n    }\n\n    this.questions = currArr;\n    currArr = [];\n\n    for (let i = 0; i < tmpArr.length; i++) {\n      if (json[tmpArr[i]] != null) {\n        currArr.push(json[tmpArr[i]]);\n      }\n    }\n\n    this.explanations = currArr;\n  }\n\n  get() {\n    return this.explanations;\n  }\n\n  getType() {\n    return this.type;\n  }\n\n  getYear() {\n    return this.year;\n  }\n\n  getSubject() {\n    return this.subject;\n  }\n\n  getTopic() {\n    return this.topic;\n  }\n\n  getQuestion() {\n    return this.question;\n  }\n\n  getAnswer() {\n    return this.answer;\n  }\n\n  getComment() {\n    return this.comment;\n  }\n\n  getQuestions() {\n    // array of strings\n    return this.questions;\n  }\n\n  getExplanations() {\n    // array of strings\n    return this.explanations;\n  }\n\n  getSession() {}\n\n}\n\nclass Services {\n  constructor() {}\n\n  static async getData(ref) {\n    var storage = firebase.storage();\n    var listRef = storage.refFromURL(ref);\n    console.log(listRef);\n    const list1 = await listRef.listAll().then(function (res) {\n      var list = [];\n      res.items.forEach(function (itemRef) {\n        list.push(itemRef.getDownloadURL());\n      });\n      return list;\n    }).catch(function (error) {\n      console.log(error);\n    });\n    const results1 = await Promise.all(list1);\n    var list2 = [];\n    results1.forEach(url => {\n      list2.push(axios.post('https://us-central1-mavka-c5c01.cloudfunctions.net/getReq', {\n        url: url\n      }, {\n        headers: {\n          'Content-Type': 'text/plain'\n        }\n      }));\n    });\n    const results2 = await Promise.all(list2);\n    let answer = [];\n    results2.forEach(resp => {\n      answer.push(resp.data);\n    });\n    console.log(answer);\n    return answer;\n  }\n\n  static async getReferenceById(id) {\n    const firestore = firebase.firestore();\n    return await firestore.collection(\"practices_id\").doc(id).get().then(doc => {\n      return doc.get(\"ref\");\n    });\n  }\n\n  static getQuestionClass(json) {\n    return new Question(json);\n  }\n\n}\n\nexport default Services;","map":{"version":3,"sources":["C:/Users/Acer/Desktop/mavka-web/src/Services/Services.js"],"names":["axios","firebase","Question","constructor","json","type","year","number","session","subject","topic","question","answer","comment","tmpArr","currArr","i","length","push","replace","questions","explanations","get","getType","getYear","getSubject","getTopic","getQuestion","getAnswer","getComment","getQuestions","getExplanations","getSession","Services","getData","ref","storage","listRef","refFromURL","console","log","list1","listAll","then","res","list","items","forEach","itemRef","getDownloadURL","catch","error","results1","Promise","all","list2","url","post","headers","results2","resp","data","getReferenceById","id","firestore","collection","doc","getQuestionClass"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport firebase from \"../global\"\r\n\r\nclass Question {\r\n    constructor(json){\r\n        this.type = json[\"Формат\"];\r\n        this.year = json[\"Рік\"];\r\n        this.number = json[\"Номер\"];\r\n        this.session = json[\"Cecія\"];\r\n        this.subject = json[\"Предмет\"];\r\n        this.topic = json[\"Тема\"];\r\n        this.question = json[\"Питання\"];\r\n        this.answer = json[\"Правильна відповідь\"];\r\n        this.comment = json[\"Коментар\"];\r\n        var tmpArr = [\"Відповідь А\", \"Відповідь Б\", \"Відповідь В\",\r\n            \"Відповідь Г\", \"Відповідь Д\", \"Відповідь Е\", \"Відповідь A\",\r\n            \"Відповідь B\", \"Відповідь C\", \"Відповідь D\", \"Відповідь E\",\r\n            \"Відповідь G\", \"Відповідь F\", \"Відповідь H\"];\r\n        var currArr = [];\r\n        for(let i = 0; i < tmpArr.length; i++){\r\n            if(json[tmpArr[i]] != null){\r\n                currArr.push(json[tmpArr[i]]);\r\n            }\r\n            tmpArr[i] = tmpArr[i].replace(\"Відповідь\", \"Пояснення\");\r\n        }\r\n        this.questions = currArr;\r\n        currArr = [];\r\n        for(let i = 0; i < tmpArr.length; i++){\r\n            if(json[tmpArr[i]] != null){\r\n                currArr.push(json[tmpArr[i]]);\r\n            }\r\n        }\r\n        this.explanations = currArr;\r\n    }\r\n    get(){\r\n        return this.explanations;\r\n    }\r\n    getType(){\r\n        return this.type;\r\n    }\r\n    getYear(){\r\n        return this.year;\r\n    }\r\n    getSubject(){\r\n        return this.subject;\r\n    }\r\n    getTopic(){\r\n        return this.topic;\r\n    }\r\n    getQuestion(){\r\n        return this.question;\r\n    }\r\n    getAnswer(){\r\n        return this.answer;\r\n    }\r\n    getComment(){\r\n        return this.comment;\r\n    }\r\n    getQuestions(){\r\n        // array of strings\r\n        return this.questions;\r\n    }\r\n    getExplanations(){\r\n        // array of strings\r\n        return this.explanations;\r\n    }\r\n    getSession () {}\r\n}\r\n\r\nclass Services {\r\n    constructor() {}\r\n\r\n    static async getData (ref){\r\n        var storage = firebase.storage();\r\n        var listRef = storage.refFromURL(ref);\r\n        console.log(listRef)\r\n        const list1 = await listRef.listAll().then(function(res) {\r\n            var list = [];\r\n            res.items.forEach(function(itemRef) {\r\n                list.push(itemRef.getDownloadURL())\r\n            });\r\n            return list\r\n        })\r\n            .catch(function(error) {\r\n                console.log(error)\r\n            });\r\n        const results1 = await Promise.all(list1);\r\n        var list2 = [];\r\n        results1.forEach(url => {\r\n            list2.push(axios.post(\r\n                'https://us-central1-mavka-c5c01.cloudfunctions.net/getReq',\r\n                {\r\n                    url: url\r\n                },\r\n                { headers: { 'Content-Type': 'text/plain' } }\r\n            ))\r\n        })\r\n        const results2 = await Promise.all(list2);\r\n        let answer = [];\r\n        results2.forEach(resp => {\r\n            answer.push(resp.data)\r\n        });\r\n        console.log(answer)\r\n        return answer\r\n    }\r\n\r\n    static async getReferenceById (id) {\r\n        const firestore = firebase.firestore();\r\n        return await firestore.collection(\"practices_id\").doc(id).get().then(doc => {\r\n            return doc.get(\"ref\");\r\n        });\r\n    }\r\n    static getQuestionClass (json) {\r\n        return new Question(json);\r\n    }\r\n}\r\nexport default Services;\r\n"]},"metadata":{},"sourceType":"module"}