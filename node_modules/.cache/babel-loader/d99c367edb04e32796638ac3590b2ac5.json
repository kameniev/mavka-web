{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\mavka-web\\\\src\\\\screens\\\\ContentMakers\\\\TestView\\\\TestView.js\";\nimport React from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport ABCDE from \"../../Templates/ABCDE/ABCDE\";\nimport TestWrapper from \"../../TestWrapper\";\nimport axios from \"axios\";\n\nclass Question {\n  constructor(json) {\n    this.type = json[\"Формат\"];\n    this.year = json[\"Рік\"];\n    this.number = json[\"Номер\"];\n    this.session = json[\"Cecія\"];\n    this.subject = json[\"Предмет\"];\n    this.topic = json[\"Тема\"];\n    this.question = json[\"Питання\"];\n    this.answer = json[\"Правильна відповідь\"];\n    this.comment = json[\"Коментар\"];\n    var tmpArr = [\"Відповідь А\", \"Відповідь Б\", \"Відповідь В\", \"Відповідь Г\", \"Відповідь Д\", \"Відповідь Е\", \"Відповідь A\", \"Відповідь B\", \"Відповідь C\", \"Відповідь D\", \"Відповідь E\", \"Відповідь G\", \"Відповідь F\", \"Відповідь H\"];\n    var currArr = [];\n\n    for (let i = 0; i < tmpArr.length; i++) {\n      if (json[tmpArr[i]] != null) {\n        currArr.push(json[tmpArr[i]]);\n      }\n\n      tmpArr[i] = tmpArr[i].replace(\"Відповідь\", \"Пояснення\");\n    }\n\n    this.questions = currArr;\n    currArr = [];\n\n    for (let i = 0; i < tmpArr.length; i++) {\n      if (json[tmpArr[i]] != null) {\n        currArr.push(json[tmpArr[i]]);\n      }\n    }\n\n    this.explanations = currArr;\n  }\n\n  get() {\n    return this.explanations;\n  }\n\n  getType() {\n    return this.type;\n  }\n\n  getYear() {\n    return this.year;\n  }\n\n  getSubject() {\n    return this.subject;\n  }\n\n  getTopic() {\n    return this.topic;\n  }\n\n  getQuestion() {\n    return this.question;\n  }\n\n  getAnswer() {\n    return this.answer;\n  }\n\n  getComment() {\n    return this.comment;\n  }\n\n  getQuestions() {\n    // array of strings\n    return this.questions;\n  }\n\n  getExplanations() {\n    // array of strings\n    return this.explanations;\n  }\n\n  getSession() {\n    return this.session;\n  }\n\n}\n\nexport class TestView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateQuestion = x => {\n      this.setState({\n        active: x,\n        data: null\n      });\n      this.getData(\"https://flask.mavka.org/api/get_question?page_id=\" + this.state.list[x]);\n    };\n\n    this.updateStatus = (id, x) => {\n      const answered = this.state.answered;\n      answered[id - 1] = x;\n      this.setState({\n        answered: answered\n      });\n    };\n\n    this.state = {\n      testId: this.props.match.params.id,\n      active: 1,\n      data: null,\n      list: []\n    };\n  }\n\n  getUrl(url) {\n    return \"https://flask.mavka.org/api/get_question?page_id=\" + url;\n  }\n\n  getData(url) {\n    fetch(url).then(response => response.json()).then(result => {\n      console.log(result);\n      this.setState({\n        data: new Question(result)\n      });\n    }).catch(e => console.log(e));\n  }\n\n  componentDidMount() {\n    let id = 'https://flask.mavka.org/api/get_test_map?page_id=' + this.state.testId;\n    fetch(id).then(response => response.json()).then(result => {\n      console.log(result);\n      this.setState({\n        list: result\n      });\n      this.getData(\"https://flask.mavka.org/api/get_question?page_id=\" + result[1]);\n    }).catch(e => console.log(e));\n  }\n\n  render() {\n    console.log(\"!!!\");\n    console.log(this.state.data);\n\n    if (this.state.data) {\n      const data = this.state.data;\n      let num = this.state.active - 1;\n\n      if (data[num].getType() == \"АБВГД\") {\n        alert(1);\n        return /*#__PURE__*/React.createElement(TestWrapper, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(ABCDE, {\n          callback: this.updateQuestion,\n          active: this.state.active,\n          number: this.state.data.length,\n          answered: this.state.answered[num],\n          data: data,\n          changeStatus: this.updateStatus,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 29\n          }\n        }), document.getElementById(\"root\").click(), document.getElementById(\"root\").click()));\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }\n    });\n  }\n\n}\nexport default TestView;","map":{"version":3,"sources":["C:/Users/Acer/Desktop/mavka-web/src/screens/ContentMakers/TestView/TestView.js"],"names":["React","Redirect","Link","ABCDE","TestWrapper","axios","Question","constructor","json","type","year","number","session","subject","topic","question","answer","comment","tmpArr","currArr","i","length","push","replace","questions","explanations","get","getType","getYear","getSubject","getTopic","getQuestion","getAnswer","getComment","getQuestions","getExplanations","getSession","TestView","Component","props","updateQuestion","x","setState","active","data","getData","state","list","updateStatus","id","answered","testId","match","params","getUrl","url","fetch","then","response","result","console","log","catch","e","componentDidMount","render","num","alert","document","getElementById","click"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,IAAlB,QAA6B,kBAA7B;AACA,OAAOC,KAAP,MAAkB,6BAAlB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAN,CAAe;AACXC,EAAAA,WAAW,CAACC,IAAD,EAAM;AACb,SAAKC,IAAL,GAAYD,IAAI,CAAC,QAAD,CAAhB;AACA,SAAKE,IAAL,GAAYF,IAAI,CAAC,KAAD,CAAhB;AACA,SAAKG,MAAL,GAAcH,IAAI,CAAC,OAAD,CAAlB;AACA,SAAKI,OAAL,GAAeJ,IAAI,CAAC,OAAD,CAAnB;AACA,SAAKK,OAAL,GAAeL,IAAI,CAAC,SAAD,CAAnB;AACA,SAAKM,KAAL,GAAaN,IAAI,CAAC,MAAD,CAAjB;AACA,SAAKO,QAAL,GAAgBP,IAAI,CAAC,SAAD,CAApB;AACA,SAAKQ,MAAL,GAAcR,IAAI,CAAC,qBAAD,CAAlB;AACA,SAAKS,OAAL,GAAeT,IAAI,CAAC,UAAD,CAAnB;AACA,QAAIU,MAAM,GAAG,CAAC,aAAD,EAAgB,aAAhB,EAA+B,aAA/B,EACT,aADS,EACM,aADN,EACqB,aADrB,EACoC,aADpC,EAET,aAFS,EAEM,aAFN,EAEqB,aAFrB,EAEoC,aAFpC,EAGT,aAHS,EAGM,aAHN,EAGqB,aAHrB,CAAb;AAIA,QAAIC,OAAO,GAAG,EAAd;;AACA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,MAAM,CAACG,MAA1B,EAAkCD,CAAC,EAAnC,EAAsC;AAClC,UAAGZ,IAAI,CAACU,MAAM,CAACE,CAAD,CAAP,CAAJ,IAAmB,IAAtB,EAA2B;AACvBD,QAAAA,OAAO,CAACG,IAAR,CAAad,IAAI,CAACU,MAAM,CAACE,CAAD,CAAP,CAAjB;AACH;;AACDF,MAAAA,MAAM,CAACE,CAAD,CAAN,GAAYF,MAAM,CAACE,CAAD,CAAN,CAAUG,OAAV,CAAkB,WAAlB,EAA+B,WAA/B,CAAZ;AACH;;AACD,SAAKC,SAAL,GAAiBL,OAAjB;AACAA,IAAAA,OAAO,GAAG,EAAV;;AACA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,MAAM,CAACG,MAA1B,EAAkCD,CAAC,EAAnC,EAAsC;AAClC,UAAGZ,IAAI,CAACU,MAAM,CAACE,CAAD,CAAP,CAAJ,IAAmB,IAAtB,EAA2B;AACvBD,QAAAA,OAAO,CAACG,IAAR,CAAad,IAAI,CAACU,MAAM,CAACE,CAAD,CAAP,CAAjB;AACH;AACJ;;AACD,SAAKK,YAAL,GAAoBN,OAApB;AACH;;AACDO,EAAAA,GAAG,GAAE;AACD,WAAO,KAAKD,YAAZ;AACH;;AACDE,EAAAA,OAAO,GAAE;AACL,WAAO,KAAKlB,IAAZ;AACH;;AACDmB,EAAAA,OAAO,GAAE;AACL,WAAO,KAAKlB,IAAZ;AACH;;AACDmB,EAAAA,UAAU,GAAE;AACR,WAAO,KAAKhB,OAAZ;AACH;;AACDiB,EAAAA,QAAQ,GAAE;AACN,WAAO,KAAKhB,KAAZ;AACH;;AACDiB,EAAAA,WAAW,GAAE;AACT,WAAO,KAAKhB,QAAZ;AACH;;AACDiB,EAAAA,SAAS,GAAE;AACP,WAAO,KAAKhB,MAAZ;AACH;;AACDiB,EAAAA,UAAU,GAAE;AACR,WAAO,KAAKhB,OAAZ;AACH;;AACDiB,EAAAA,YAAY,GAAG;AACX;AACA,WAAO,KAAKV,SAAZ;AACH;;AACDW,EAAAA,eAAe,GAAE;AACb;AACA,WAAO,KAAKV,YAAZ;AACH;;AACDW,EAAAA,UAAU,GAAI;AACV,WAAO,KAAKxB,OAAZ;AACH;;AAjEU;;AAoEf,OAAO,MAAMyB,QAAN,SAAuBrC,KAAK,CAACsC,SAA7B,CAAuC;AAE1C/B,EAAAA,WAAW,CAACgC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAwCnBC,cAxCmB,GAwCDC,CAAD,IAAO;AACpB,WAAKC,QAAL,CAAc;AACVC,QAAAA,MAAM,EAAEF,CADE;AAEVG,QAAAA,IAAI,EAAE;AAFI,OAAd;AAIA,WAAKC,OAAL,CAAa,sDAAsD,KAAKC,KAAL,CAAWC,IAAX,CAAgBN,CAAhB,CAAnE;AACH,KA9CkB;;AAAA,SAgDnBO,YAhDmB,GAgDJ,CAACC,EAAD,EAAKR,CAAL,KAAW;AACtB,YAAMS,QAAQ,GAAG,KAAKJ,KAAL,CAAWI,QAA5B;AACAA,MAAAA,QAAQ,CAACD,EAAE,GAAG,CAAN,CAAR,GAAmBR,CAAnB;AACA,WAAKC,QAAL,CAAc;AACVQ,QAAAA,QAAQ,EAAEA;AADA,OAAd;AAGH,KAtDkB;;AAEf,SAAKJ,KAAL,GAAa;AACTK,MAAAA,MAAM,EAAE,KAAKZ,KAAL,CAAWa,KAAX,CAAiBC,MAAjB,CAAwBJ,EADvB;AAETN,MAAAA,MAAM,EAAE,CAFC;AAGTC,MAAAA,IAAI,EAAE,IAHG;AAITG,MAAAA,IAAI,EAAE;AAJG,KAAb;AAMH;;AACDO,EAAAA,MAAM,CAAEC,GAAF,EAAO;AACT,WAAO,sDAAsDA,GAA7D;AACH;;AAEDV,EAAAA,OAAO,CAAEU,GAAF,EAAO;AACVC,IAAAA,KAAK,CAACD,GAAD,CAAL,CACKE,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAAClD,IAAT,EADtB,EAEKiD,IAFL,CAEUE,MAAM,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,WAAKjB,QAAL,CAAc;AACVE,QAAAA,IAAI,EAAE,IAAItC,QAAJ,CAAaqD,MAAb;AADI,OAAd;AAGH,KAPL,EAQKG,KARL,CAQWC,CAAC,IAAIH,OAAO,CAACC,GAAR,CAAYE,CAAZ,CARhB;AASH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,QAAIf,EAAE,GAAG,sDAAsD,KAAKH,KAAL,CAAWK,MAA1E;AACAK,IAAAA,KAAK,CAACP,EAAD,CAAL,CACKQ,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAAClD,IAAT,EADtB,EAEKiD,IAFL,CAEUE,MAAM,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,WAAKjB,QAAL,CAAc;AACVK,QAAAA,IAAI,EAAEY;AADI,OAAd;AAGA,WAAKd,OAAL,CAAa,sDAAsDc,MAAM,CAAC,CAAD,CAAzE;AACH,KARL,EASKG,KATL,CASWC,CAAC,IAAIH,OAAO,CAACC,GAAR,CAAYE,CAAZ,CAThB;AAWH;;AAkBDE,EAAAA,MAAM,GAAG;AACLL,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWF,IAAvB;;AACA,QAAI,KAAKE,KAAL,CAAWF,IAAf,EAAqB;AACjB,YAAMA,IAAI,GAAG,KAAKE,KAAL,CAAWF,IAAxB;AACA,UAAIsB,GAAG,GAAG,KAAKpB,KAAL,CAAWH,MAAX,GAAoB,CAA9B;;AACA,UAAIC,IAAI,CAACsB,GAAD,CAAJ,CAAUvC,OAAV,MAAuB,OAA3B,EAAoC;AAChCwC,QAAAA,KAAK,CAAC,CAAD,CAAL;AACA,4BACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,KAAD;AACI,UAAA,QAAQ,EAAE,KAAK3B,cADnB;AAEI,UAAA,MAAM,EAAE,KAAKM,KAAL,CAAWH,MAFvB;AAGI,UAAA,MAAM,EAAE,KAAKG,KAAL,CAAWF,IAAX,CAAgBvB,MAH5B;AAII,UAAA,QAAQ,EAAE,KAAKyB,KAAL,CAAWI,QAAX,CAAoBgB,GAApB,CAJd;AAKI,UAAA,IAAI,EAAEtB,IALV;AAMI,UAAA,YAAY,EAAE,KAAKI,YANvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EASKoB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,KAAhC,EATL,EAUKF,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,KAAhC,EAVL,CADJ,CADJ;AAgBH;AACJ;;AACD,wBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AACH;;AArFyC;AAwF9C,eAAejC,QAAf","sourcesContent":["import React from 'react';\r\nimport {Redirect, Link} from 'react-router-dom';\r\nimport ABCDE from \"../../Templates/ABCDE/ABCDE\";\r\nimport TestWrapper from \"../../TestWrapper\";\r\nimport axios from \"axios\";\r\n\r\nclass Question {\r\n    constructor(json){\r\n        this.type = json[\"Формат\"];\r\n        this.year = json[\"Рік\"];\r\n        this.number = json[\"Номер\"];\r\n        this.session = json[\"Cecія\"];\r\n        this.subject = json[\"Предмет\"];\r\n        this.topic = json[\"Тема\"];\r\n        this.question = json[\"Питання\"];\r\n        this.answer = json[\"Правильна відповідь\"];\r\n        this.comment = json[\"Коментар\"];\r\n        var tmpArr = [\"Відповідь А\", \"Відповідь Б\", \"Відповідь В\",\r\n            \"Відповідь Г\", \"Відповідь Д\", \"Відповідь Е\", \"Відповідь A\",\r\n            \"Відповідь B\", \"Відповідь C\", \"Відповідь D\", \"Відповідь E\",\r\n            \"Відповідь G\", \"Відповідь F\", \"Відповідь H\"];\r\n        var currArr = [];\r\n        for(let i = 0; i < tmpArr.length; i++){\r\n            if(json[tmpArr[i]] != null){\r\n                currArr.push(json[tmpArr[i]]);\r\n            }\r\n            tmpArr[i] = tmpArr[i].replace(\"Відповідь\", \"Пояснення\");\r\n        }\r\n        this.questions = currArr;\r\n        currArr = [];\r\n        for(let i = 0; i < tmpArr.length; i++){\r\n            if(json[tmpArr[i]] != null){\r\n                currArr.push(json[tmpArr[i]]);\r\n            }\r\n        }\r\n        this.explanations = currArr;\r\n    }\r\n    get(){\r\n        return this.explanations;\r\n    }\r\n    getType(){\r\n        return this.type;\r\n    }\r\n    getYear(){\r\n        return this.year;\r\n    }\r\n    getSubject(){\r\n        return this.subject;\r\n    }\r\n    getTopic(){\r\n        return this.topic;\r\n    }\r\n    getQuestion(){\r\n        return this.question;\r\n    }\r\n    getAnswer(){\r\n        return this.answer;\r\n    }\r\n    getComment(){\r\n        return this.comment;\r\n    }\r\n    getQuestions() {\r\n        // array of strings\r\n        return this.questions;\r\n    }\r\n    getExplanations(){\r\n        // array of strings\r\n        return this.explanations;\r\n    }\r\n    getSession () {\r\n        return this.session;\r\n    }\r\n}\r\n\r\nexport class TestView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            testId: this.props.match.params.id,\r\n            active: 1,\r\n            data: null,\r\n            list: [],\r\n        }\r\n    }\r\n    getUrl (url) {\r\n        return \"https://flask.mavka.org/api/get_question?page_id=\" + url;\r\n    }\r\n\r\n    getData (url) {\r\n        fetch(url)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                console.log(result);\r\n                this.setState({\r\n                    data: new Question(result),\r\n                })\r\n            })\r\n            .catch(e => console.log(e));\r\n    }\r\n\r\n    componentDidMount() {\r\n        let id = 'https://flask.mavka.org/api/get_test_map?page_id=' + this.state.testId;\r\n        fetch(id)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                console.log(result);\r\n                this.setState({\r\n                    list: result,\r\n                })\r\n                this.getData(\"https://flask.mavka.org/api/get_question?page_id=\" + result[1]);\r\n            })\r\n            .catch(e => console.log(e));\r\n\r\n    }\r\n\r\n    updateQuestion = (x) => {\r\n        this.setState({\r\n            active: x,\r\n            data: null\r\n        });\r\n        this.getData(\"https://flask.mavka.org/api/get_question?page_id=\" + this.state.list[x]);\r\n    }\r\n\r\n    updateStatus = (id, x) => {\r\n        const answered = this.state.answered;\r\n        answered[id - 1] = x;\r\n        this.setState({\r\n            answered: answered\r\n        })\r\n    }\r\n\r\n    render() {\r\n        console.log(\"!!!\");\r\n        console.log(this.state.data);\r\n        if (this.state.data) {\r\n            const data = this.state.data;\r\n            let num = this.state.active - 1;\r\n            if (data[num].getType() == \"АБВГД\") {\r\n                alert(1);\r\n                return (\r\n                    <TestWrapper>\r\n                        <div>\r\n                            <ABCDE\r\n                                callback={this.updateQuestion}\r\n                                active={this.state.active}\r\n                                number={this.state.data.length}\r\n                                answered={this.state.answered[num]}\r\n                                data={data}\r\n                                changeStatus={this.updateStatus}\r\n                            />\r\n                            {document.getElementById(\"root\").click()}\r\n                            {document.getElementById(\"root\").click()}\r\n                        </div>\r\n                    </TestWrapper>\r\n                )\r\n            }\r\n        }\r\n        return (<div></div>);\r\n    }\r\n}\r\n\r\nexport default TestView;"]},"metadata":{},"sourceType":"module"}