{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\mavka-web\\\\src\\\\screens\\\\Test\\\\Test.js\";\nimport React from 'react';\nimport firebase from \"../../global\";\nimport { Redirect, Link } from 'react-router-dom';\nimport axios from \"axios\";\nimport ListItem from \"../../UI/ListItem\";\nimport QuestionNavPanel from \"../../UI/QuestionNavPanel\";\nimport ABCDE from \"../Templates/ABCDE/ABCDE\";\nimport Services from \"../../Services\";\nimport TestWrapper from \"../TestWrapper\";\nexport class Test extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getAuthStatus = () => {\n      firebase.auth().onAuthStateChanged(resp => {\n        // Pass response to a call back func to update state\n        this.updateUserState(resp);\n      });\n    };\n\n    this.updateQuestion = x => {\n      this.setState({\n        active: x\n      });\n    };\n\n    this.updateStatus = (id, x) => {\n      const answered = this.state.answered;\n      answered[id] = x;\n      this.setState({\n        answered: answered\n      });\n    };\n\n    this.state = {\n      subject: this.props.match.params.id,\n      testId: this.props.match.params.testId,\n      user: 25,\n      active: 1,\n      data: [],\n      answered: []\n    };\n    let current = this;\n    Services.getReferenceById(this.state.testId).then(function (ref) {\n      Services.getData(ref).then(function (data) {\n        let myData = data.map(value => Services.getQuestionClass(value));\n        let status = [];\n\n        for (let i = 0; i < myData.length; i++) status.push(false);\n\n        current.setState({\n          data: myData,\n          answered: status\n        });\n        console.log(\"here\");\n        console.log(myData);\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.getAuthStatus();\n  } // Get firebase auth status.\n\n\n  // update state\n  updateUserState(resp) {\n    this.setState({\n      user: resp\n    });\n  }\n\n  render() {\n    if (this.state.user == 25) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }\n      });\n    }\n\n    if (this.state.user) {\n      if (this.state.data.length > 0) {\n        const data = this.state.data;\n        let num = this.state.active - 1;\n\n        if (data[num].getType() == \"АБВГД\") {\n          return /*#__PURE__*/React.createElement(TestWrapper, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(ABCDE, {\n            callback: this.updateQuestion,\n            active: this.state.active,\n            number: this.state.data.length,\n            answered: this.state.answered[num],\n            data: data[num],\n            changeStatus: this.updateStatus,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 33\n            }\n          }), document.getElementById(\"root\").click(), document.getElementById(\"root\").click()));\n        }\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 16\n      }\n    });\n  }\n\n}\nexport default Test;","map":{"version":3,"sources":["C:/Users/Acer/Desktop/mavka-web/src/screens/Test/Test.js"],"names":["React","firebase","Redirect","Link","axios","ListItem","QuestionNavPanel","ABCDE","Services","TestWrapper","Test","Component","constructor","props","getAuthStatus","auth","onAuthStateChanged","resp","updateUserState","updateQuestion","x","setState","active","updateStatus","id","answered","state","subject","match","params","testId","user","data","current","getReferenceById","then","ref","getData","myData","map","value","getQuestionClass","status","i","length","push","console","log","componentDidMount","render","num","getType","document","getElementById","click"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport firebase from \"../../global\"\r\nimport {Redirect, Link} from 'react-router-dom';\r\nimport axios from \"axios\";\r\nimport ListItem from \"../../UI/ListItem\";\r\nimport QuestionNavPanel from \"../../UI/QuestionNavPanel\";\r\nimport ABCDE from \"../Templates/ABCDE/ABCDE\";\r\nimport Services from \"../../Services\";\r\nimport TestWrapper from \"../TestWrapper\";\r\n\r\nexport class Test extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            subject: this.props.match.params.id,\r\n            testId: this.props.match.params.testId,\r\n            user: 25,\r\n            active: 1,\r\n            data: [],\r\n            answered: []\r\n        }\r\n        let current = this;\r\n        Services.getReferenceById(this.state.testId).then(function (ref) {\r\n            Services.getData(ref).then(function (data) {\r\n                let myData = data.map(value => Services.getQuestionClass(value));\r\n                let status = [];\r\n                for (let i = 0; i < myData.length; i++) status.push(false);\r\n                current.setState({\r\n                    data: myData,\r\n                    answered: status\r\n                });\r\n                console.log(\"here\");\r\n                console.log(myData);\r\n            })\r\n        })\r\n\r\n    }\r\n    \r\n\r\n\r\n    componentDidMount() {\r\n        this.getAuthStatus();\r\n    }\r\n\r\n    // Get firebase auth status.\r\n    getAuthStatus = () => {\r\n        firebase.auth().onAuthStateChanged((resp) => {\r\n            // Pass response to a call back func to update state\r\n            this.updateUserState(resp);\r\n        });\r\n    }\r\n\r\n    // update state\r\n    updateUserState (resp) {\r\n        this.setState({\r\n            user: resp\r\n        });\r\n    }\r\n\r\n    updateQuestion = (x) => {\r\n        this.setState({\r\n            active: x\r\n        });\r\n    }\r\n\r\n    updateStatus = (id, x) => {\r\n        const answered = this.state.answered;\r\n        answered[id] = x;\r\n        this.setState({\r\n            answered: answered\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.user == 25) {\r\n            return (<div></div>);\r\n        }\r\n        if (this.state.user) {\r\n            if (this.state.data.length > 0) {\r\n                const data = this.state.data;\r\n                let num = this.state.active - 1;\r\n                if (data[num].getType() == \"АБВГД\") {\r\n                    return (\r\n                        <TestWrapper>\r\n                            <div>\r\n                                <ABCDE\r\n                                    callback={this.updateQuestion}\r\n                                    active={this.state.active}\r\n                                    number={this.state.data.length}\r\n                                    answered={this.state.answered[num]}\r\n                                    data={data[num]}\r\n                                    changeStatus={this.updateStatus}\r\n                                />\r\n                                {document.getElementById(\"root\").click()}\r\n                                {document.getElementById(\"root\").click()}\r\n                            </div>\r\n                        </TestWrapper>\r\n                    )\r\n                }\r\n            }\r\n            return (<div></div>);\r\n        }\r\n        return(<Redirect to=\"/login\"/>);\r\n    }\r\n}\r\n\r\nexport default Test;"]},"metadata":{},"sourceType":"module"}